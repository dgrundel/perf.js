(function(){

	perf.log('So, I was working on <a href="http://dgrundel.github.io/tripod.js/">tripod.js</a> the other day and for some reason,' +
		' I couldn\'t get to JSPerf. This is the result.');

	perf.log('Here\'s a really simple example test:');

	new perf('Add two numbers')
		.test(function(namespace){
			var result = 2 + 2;
		})
		.run();

	perf.log('You just new it up and start chaining calls together: \n\t' +
		'new perf("Test Name").test(functionToTestSomething).run();', 'alert');

	perf.log('...and now a little suite of tests that compares the results:');

	perf.compare(
		'Testing methods to grab a template string from the DOM.',

		new perf('Template acquisition with attribute')
			.setup(function(namespace){
				namespace.attributeNode = document.getElementById('testNode');
			})
			.test(function(namespace){
				var templateString = namespace.attributeNode.getAttribute('data-test-attribute');
			}),

		new perf('Template acquisition with getElementById and attribute')
			.test(function(namespace){
				var templateString = document.getElementById('testNode').getAttribute('data-test-attribute');
			}),

		new perf('Template acquisition with getElementById and innerHTML')
			.test(function(){
				var templateString = document.getElementById('testTemplateNode').innerHTML;
			})
	);

	perf.log('You can pass perf.compare() a bunch of tests and it will tell you which ran fastest. \n\t' +
		'perf.compare(\n\t\t' +
			'new perf("Test Name").test(functionToTestSomething),\n\t\t' +
			'new perf("Another Test Name").test(functionToTestSomethingElse) );', 'alert');

	perf.log('Note that perf.compare() will automatically call the run() method on your tests.');

	perf.log('If you need to do some setup and teardown work with your test, you can do that, too:\n\t' +
		'new perf("Test with setup and teardown functions")\n\t\t' +
		'.setup(someSetupFunction)\n\t\t' + 
		'.test(theTestFunction)\n\t\t' +
		'.teardown(someTeardownFunction)\n\t\t' +
		'.run();', 'alert');

	perf.log('You can have as many setups, tests, and teardowns as you like. Just keep calling setup(), test(), and teardown().');

	perf.log('Your setup, test, and teardown functions are all passed a single argument,' +
		' which is an object you can use to share data between your setup, test, and teardown functions.');

	perf.log('I call it namespace. You can use it like this:\n\t' +
		'new perf("Test with shared data between functions")\n\t\t' +
		'.setup(function(namespace) {\n\t\t\t' +
			'namespace.myVar = "hello";\n\t\t' +
		'})\n\t\t' + 
		'.test(function(namespace) {\n\t\t\t' +
			'console.log(namespace.myVar); // "hello"\n\t\t\t' +
			'namespace.myVar = "goodbye"; \n\t\t' +
		'})\n\t\t' +
		'.teardown(function(namespace) {\n\t\t\t' +
			'console.log(namespace.myVar); // "goodbye"\n\t\t' +
		'})\n\t\t' +
		'.run();', 'alert');

	perf.log('This page generated by perf.js. perf.js was created and is maintained by <a href="https://github.com/dgrundel">dgrundel</a>.');
})();